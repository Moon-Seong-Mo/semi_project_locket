DROP SEQUENCE SEQ_BCOUNT;
DROP SEQUENCE SEQ_BFCOUNT;
DROP SEQUENCE SEQ_CCOUNT;
DROP SEQUENCE SEQ_DCOUNT;
DROP SEQUENCE SEQ_GCOUNT;
DROP SEQUENCE SEQ_GFCOUNT;
DROP SEQUENCE SEQ_RCOUNT;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE MEMBER_RANK;
DROP TABLE MEMBER_ACTIVITY;
DROP TABLE SHIPPING_ADDRESS;
DROP TABLE WISHLIST;
DROP TABLE APPLY;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE BOARD_COMMENT;
DROP TABLE BOARD_FILE;
DROP TABLE GROUP_BUY CASCADE CONSTRAINTS;
DROP TABLE GROUP_FILE;
DROP TABLE MEMBER_REPORT;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;
DROP TABLE PRODUCT_FILE CASCADE CONSTRAINTS;
DROP TABLE MEMBER_MESSAGE;
DROP TABLE PRODUCT_COMMENT;
DROP VIEW ALIST;
DROP VIEW BLIST;
DROP VIEW BUY_LIST;
DROP VIEW GLIST;
DROP VIEW PDETAIL;
DROP VIEW PLIST;
DROP TABLE DEAL;
DROP SEQUENCE SEQ_MERCHANT_UID;
DROP SEQUENCE SEQ_MCOUNT;
DROP SEQUENCE SEQ_PCOUNT;
DROP SEQUENCE SEQ_PFCOUNT;
DROP PROCEDURE CHECK_RANK;
DROP PROCEDURE CHECK_RANK_RES;
DROP TABLE ADDR;

DROP USER LOCKET CASCADE;

--DECLARE
    v_member_id  VARCHAR2(20);
    v_rank_code  NUMBER;
    v_count      NUMBER;
BEGIN
    v_member_id := NULL;
    check_rank(v_member_id => v_member_id, v_rank_code => v_rank_code, v_count => v_count);
  /* Legacy output: 
DBMS_OUTPUT.PUT_LINE('V_RANK_CODE = ' || V_RANK_CODE);
*/ 
      :v_rank_code := v_rank_code;
  /* Legacy output: 
DBMS_OUTPUT.PUT_LINE('V_COUNT = ' || V_COUNT);
*/ 
      :v_count :=
    v_count;
--rollback; 
END;------------------------------------------------------------------------------
CREATE OR REPLACE VIEW ALIST
AS
SELECT ROWNUM RNUM, DESCAPPLY.*
FROM (SELECT MERCHANT_UID, GROUP_NUM, A.MEMBER_ID, MEMBERNAME, AMOUNT, APPLY_DATE
        FROM APPLY A
            JOIN MEMBER USING(MEMBER_ID)
            JOIN GROUP_BUY USING(GROUP_NUM)
        WHERE A.STATUS = 'Y'
        ORDER BY MERCHANT_UID DESC) DESCAPPLY;

SELECT * FROM ALIST WHERE BETWEEN 1 AND 10 AND MEMBER_ID = 'user01';

-------------------------------------------------------------------------------
CREATE OR REPLACE VIEW BUY_LIST
AS
SELECT ROWNUM RNUM, DESCAPPLY.*
FROM (SELECT MERCHANT_UID, GROUP_NUM, MEMBERNAME, TITLE, ADDRESS, AMOUNT, APPLY_DATE
        FROM APPLY A
            JOIN MEMBER M USING(MEMBER_ID)
            JOIN SHIPPING_ADDRESS SA USING(MEMBER_ID)
            JOIN GROUP_BUY G USING(GROUP_NUM)
        WHERE A.STATUS = 'Y'
        ORDER BY MERCHANT_UID DESC) DESCAPPLY;

--    ==================================================================================== 프록시저
        
CREATE OR REPLACE PROCEDURE CHECK_RANK(V_MEMBER_ID MEMBER.MEMBER_ID%TYPE, V_RANK_CODE OUT MEMBER.RANK_CODE%TYPE, V_COUNT OUT NUMBER)
IS
BEGIN
    SELECT COUNT(*)
    INTO V_COUNT
    FROM DEAL
    WHERE (RECEIVER = V_MEMBER_ID AND STATUS='N') OR (MEMBER = V_MEMBER_ID AND STATUS = 'N');
    
    SELECT RANK_CODE
    INTO V_RANK_CODE
    FROM MEMBER
    WHERE MEMBER_ID = V_MEMBER_ID;
    
END;
/

CREATE OR REPLACE PROCEDURE CHECK_RANK_RES(V_MEMBER_ID MEMBER.MEMBER_ID%TYPE, V_MEMBER_ID2 MEMBER.MEMBER_ID%TYPE, RES OUT NUMBER)
IS
  V_RANK_CODE MEMBER.RANK_CODE%TYPE;
  V_COUNT NUMBER;
  V_RANK_CODE2 MEMBER.RANK_CODE%TYPE;
  V_COUNT2 NUMBER;
  RES2 NUMBER;
BEGIN
    CHECK_RANK(V_MEMBER_ID, V_RANK_CODE, V_COUNT);
    CHECK_RANK(V_MEMBER_ID2, V_RANK_CODE2, V_COUNT2);
    
    RES := 0;
    RES2 := 0;
    IF V_RANK_CODE <= 1 AND V_COUNT >= 5
    THEN RES := 1;
    ELSIF V_RANK_CODE <= 2 AND V_COUNT >= 10
    THEN RES := 2;
    ELSIF V_RANK_CODE <= 3 AND V_COUNT >= 20
    THEN RES := 3;
    END IF;
    
    IF V_RANK_CODE2 <= 1 AND V_COUNT2 >= 5
    THEN RES2 := 1;
    ELSIF V_RANK_CODE2 <= 2 AND V_COUNT2 >= 10
    THEN RES2 := 2;
    ELSIF V_RANK_CODE2 <= 3 AND V_COUNT2 >= 20
    THEN RES2 := 3;
    END IF;
    
    IF RES > 0
    THEN UPDATE MEMBER SET RANK_CODE = RANK_CODE + 1 WHERE MEMBER_ID = V_MEMBER_ID;
    END IF;
    IF RES2 > 0
    THEN UPDATE MEMBER SET RANK_CODE = RANK_CODE + 1 WHERE MEMBER_ID = V_MEMBER_ID2;
    END IF;
    COMMIT;
    RES := RES + RES2;
END;
/
        